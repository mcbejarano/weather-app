{"ast":null,"code":"var _jsxFileName = \"/home/developer/Documentos/weatherApp/weather-app/src/components/WeatherLocation/WeatherData/WeatherTemperature.js\";\nimport React from 'react';\nimport WeatherIcons from 'react-weathericons';\nimport PropTypes from 'prop-types';\nimport './style.css';\nconst icons = {\n  [CLOUD]: \"cloud\",\n  [CLOUDY]: \"cloudy\",\n  [SUN]: \"day-sunny\",\n  [RAIN]: \"rain\",\n  [SNOW]: \"snow\",\n  [WINDY]: \"windy\"\n};\n\nconst getWeatherIcon = weatherState => {\n  const sizeIcon = \"4x\";\n  const icon = icons[weatherState];\n  if (icon) return React.createElement(WeatherIcons, {\n    name: icon,\n    className: \"wicon\",\n    size: sizeIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });else return React.createElement(WeatherIcons, {\n    name: \"day-rain\",\n    className: \"wicon\",\n    size: sizeIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  });\n};\n\nconst WeatherTemperature = ({\n  temperature,\n  weatherState\n}) => React.createElement(\"div\", {\n  className: \"weatherTemperatureCont\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, getWeatherIcon(weatherState), React.createElement(\"span\", {\n  className: \"temperature\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, \" \".concat(temperature), \" \"), React.createElement(\"span\", {\n  className: \"temperatureType\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, \" C\\xB0\", \" \"));\n\nWeatherTemperature.propTypes = {\n  temperature: PropTypes.number.isRequired,\n  weatherState: PropTypes.string.isRequired\n};\nexport default WeatherTemperature;","map":{"version":3,"sources":["/home/developer/Documentos/weatherApp/weather-app/src/components/WeatherLocation/WeatherData/WeatherTemperature.js"],"names":["React","WeatherIcons","PropTypes","icons","CLOUD","CLOUDY","SUN","RAIN","SNOW","WINDY","getWeatherIcon","weatherState","sizeIcon","icon","WeatherTemperature","temperature","propTypes","number","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;AAEA,MAAMC,KAAK,GAAG;AACZ,GAACC,KAAD,GAAS,OADG;AAEZ,GAACC,MAAD,GAAU,QAFE;AAGZ,GAACC,GAAD,GAAO,WAHK;AAIZ,GAACC,IAAD,GAAQ,MAJI;AAKZ,GAACC,IAAD,GAAQ,MALI;AAMZ,GAACC,KAAD,GAAS;AANG,CAAd;;AASA,MAAMC,cAAc,GAAGC,YAAY,IAAI;AACrC,QAAMC,QAAQ,GAAC,IAAf;AACA,QAAMC,IAAI,GAAEV,KAAK,CAACQ,YAAD,CAAjB;AACA,MAAIE,IAAJ,EACI,OAAO,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEA,IAApB;AAA0B,IAAA,SAAS,EAAC,OAApC;AAA4C,IAAA,IAAI,EAAED,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CADJ,KAGI,OAAO,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAE,UAApB;AAAgC,IAAA,SAAS,EAAC,OAA1C;AAAkD,IAAA,IAAI,EAAEA,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACL,CAPD;;AASA,MAAME,kBAAkB,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcJ,EAAAA;AAAd,CAAD,KACzB;AAAK,EAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEID,cAAc,CAACC,YAAD,CAFlB,EAIE;AAAM,EAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAmCI,WAAnC,OAJF,EAKE;AAAM,EAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CADF;;AAUAD,kBAAkB,CAACE,SAAnB,GAA+B;AAC7BD,EAAAA,WAAW,EAAEb,SAAS,CAACe,MAAV,CAAiBC,UADD;AAE7BP,EAAAA,YAAY,EAAET,SAAS,CAACiB,MAAV,CAAiBD;AAFF,CAA/B;AAKA,eAAeJ,kBAAf","sourcesContent":["import React from 'react';\nimport WeatherIcons from 'react-weathericons';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nconst icons = {\n  [CLOUD]: \"cloud\",\n  [CLOUDY]: \"cloudy\",\n  [SUN]: \"day-sunny\",\n  [RAIN]: \"rain\",\n  [SNOW]: \"snow\",\n  [WINDY]: \"windy\"\n};\n\nconst getWeatherIcon = weatherState => {\n  const sizeIcon=\"4x\";\n  const icon= icons[weatherState];\n  if (icon)\n      return <WeatherIcons name={icon} className=\"wicon\" size={sizeIcon}/>;\n  else\n      return <WeatherIcons name={\"day-rain\"} className=\"wicon\" size={sizeIcon}/>;\n};\n\nconst WeatherTemperature = ({temperature, weatherState}) => (\n  <div className=\"weatherTemperatureCont\">\n    {\n      getWeatherIcon(weatherState)\n    }\n    <span className=\"temperature\">{` ${temperature}`} </span>\n    <span className=\"temperatureType\">{` CÂ°`} </span>\n  </div>\n);\n\nWeatherTemperature.propTypes = {\n  temperature: PropTypes.number.isRequired,\n  weatherState: PropTypes.string.isRequired,\n};\n\nexport default WeatherTemperature;\n"]},"metadata":{},"sourceType":"module"}